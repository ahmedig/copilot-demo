name: Provision Infrastructure

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        description: "The environment to validate the application infrastructure for"
        required: true
        type: string
      BUILD_VERSION:
        description: "The version of the build to deploy to the application resources"
        required: true
        type: string
      AZURE_LOCATION:
        description: "The Azure region to deploy the application resources to"
        required: true
        type: string
      AZURE_ENV_NAME:
        description: "The name of the Azure environment"
        required: true
        type: string

    secrets:
      AZURE_TENANT_ID:
        description: "The Azure tenant ID to use for authentication to Azure for deployment"
        required: true
      AZURE_SUBSCRIPTION_ID:
        description: "The Azure subscription ID to use for authentication to Azure for deployment"
        required: true
      AZURE_CLIENT_ID:
        description: "The Azure client ID to use for authentication to Azure for deployment"
        required: true
      SQL_SERVER_USERNAME:
        description: "The SQL Server username for the application"
        required: true
      SQL_SERVER_PASSWORD:
        description: "The SQL Server password for the application"
        required: true

jobs:
  provision-infrastructure:
    name: Provision Infrastructure ${{ inputs.ENVIRONMENT }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ inputs.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ inputs.AZURE_LOCATION }}
      AZURE_PRINCIPAL_ID_TYPE: 'ServicePrincipal'
      SQL_SERVER_USERNAME: ${{ secrets.SQL_SERVER_USERNAME }}
      SQL_SERVER_PASSWORD: ${{ secrets.SQL_SERVER_PASSWORD }}

    outputs:
      AZURE_AI_SERVICES_ENDPOINT: ${{ steps.get_endpoints.outputs.AZURE_AI_SERVICES_ENDPOINT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install azd
        uses: Azure/setup-azd@v2.1.0

      - name: Authenticate azd (Federated Credentials)
        run: |
          azd auth login \
            --client-id "$AZURE_CLIENT_ID" \
            --federated-credential-provider "github" \
            --tenant-id "$AZURE_TENANT_ID"

      - name: Provision Infrastructure
        run: azd provision --no-prompt

      - name: Get Output Endpoints
        id: get_endpoints
        run: |
          AZURE_AI_SERVICES_ENDPOINT=$(azd env get-values | grep AZURE_AI_SERVICES_ENDPOINT | cut -d'=' -f2- | xargs)
          echo "AZURE_AI_SERVICES_ENDPOINT=$AZURE_AI_SERVICES_ENDPOINT" >> $GITHUB_OUTPUT
